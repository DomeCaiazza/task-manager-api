services:
  db-dev:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_DEV}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_PORT: ${MYSQL_PORT}
    ports:
      - "3306:${MYSQL_PORT}"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 15s
      timeout: 5s
      retries: 3

  db-test:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_TEST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_PORT: ${MYSQL_PORT}
    ports:
      - "3307:${MYSQL_PORT}"
    tmpfs:
      - /var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 15s
      timeout: 5s
      retries: 3

  web-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - .:/app
      - bundle_cache:/usr/local/bundle
    ports:
      - "3000:3000"
    environment:
      MYSQL_DATABASE_DEV: ${MYSQL_DATABASE_DEV}
      MYSQL_HOST_DEV: ${MYSQL_HOST_DEV}
      MYSQL_DATABASE_TEST: ${MYSQL_DATABASE_TEST}
      MYSQL_HOST_TEST: ${MYSQL_HOST_TEST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_PORT: ${MYSQL_PORT}
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
    depends_on:
      db-dev:
        condition: service_healthy
      db-test:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge


volumes:
  mysql_data:
  bundle_cache: 